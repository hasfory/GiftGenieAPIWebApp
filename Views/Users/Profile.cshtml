@model GiftGenieAPIWebApp.Models.User
@using GiftGenieAPIWebApp.Models
@{
    ViewData["Title"] = $"{Model.Username}’s Profile";

    var status = ViewBag.FriendStatus as string;
    var isOut = (bool)(ViewBag.IsRequestOut ?? false);
    bool isMe = User.Identity?.Name == Model.Username;
}

<h1 class="mb-4">@Model.Username’s Profile</h1>

@if (!isMe)
{
    <div class="mb-4">
        @switch (status)
        {
            case null:
                <form asp-action="AddFriend" asp-route-id="@Model.UserId" method="post" class="d-inline">
                    <button class="btn btn-success">Add Friend</button>
                </form>
                break;

            case FriendStatuses.Pending when isOut:
                <button class="btn btn-secondary" disabled>Pending</button>
                break;

            case FriendStatuses.Pending:
                <form asp-action="Respond" asp-route-id="@Model.UserId" method="post" class="d-inline me-2">
                    <input type="hidden" name="accept" value="true" />
                    <button class="btn btn-success btn-sm">Accept</button>
                </form>
                <form asp-action="Respond" asp-route-id="@Model.UserId" method="post" class="d-inline">
                    <input type="hidden" name="accept" value="false" />
                    <button class="btn btn-danger btn-sm">Reject</button>
                </form>
                break;

            case FriendStatuses.Accepted:
                <div class="btn-group">
                    <button class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown">Friends</button>
                    <ul class="dropdown-menu">
                        <li>
                            <form asp-action="RemoveFriend" asp-route-id="@Model.UserId" method="post" class="px-2">
                                <button type="submit" class="dropdown-item text-danger">Remove Friend</button>
                            </form>
                        </li>
                    </ul>
                </div>
                break;

            case FriendStatuses.Rejected:
                <span class="text-muted">Request declined</span>
                break;
        }
    </div>
}


<div class="row mb-5">
    <div class="col-md-4">
        <dl class="row">
            <dt class="col-sm-4">Full Name</dt>
            <dd class="col-sm-8">@Model.FullName</dd>

            <dt class="col-sm-4">Birthdate</dt>
            <dd class="col-sm-8">@Model.Birthdate.ToString("yyyy-MM-dd")</dd>
        </dl>
    </div>


<h2 class="mb-3">Wishlists</h2>
@if (!Model.Wishlists.Any())
{
    <p class="text-muted">No wishlists to show.</p>
}
else
{
    <div class="row">
        @foreach (var wl in Model.Wishlists.Where(w =>
       w.IsPublic || status == FriendStatuses.Accepted))
        {
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@wl.Title</h5>
                        <a asp-controller="Wishlist"
                           asp-action="Details"
                           asp-route-id="@wl.WishlistId"
                           class="btn btn-outline-primary btn-sm">View</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
